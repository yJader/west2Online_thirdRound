package com.yj.weather.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class WeatherExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public WeatherExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andLocationIdIsNull() {
            addCriterion("location_id is null");
            return (Criteria) this;
        }

        public Criteria andLocationIdIsNotNull() {
            addCriterion("location_id is not null");
            return (Criteria) this;
        }

        public Criteria andLocationIdEqualTo(String value) {
            addCriterion("location_id =", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdNotEqualTo(String value) {
            addCriterion("location_id <>", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdGreaterThan(String value) {
            addCriterion("location_id >", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdGreaterThanOrEqualTo(String value) {
            addCriterion("location_id >=", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdLessThan(String value) {
            addCriterion("location_id <", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdLessThanOrEqualTo(String value) {
            addCriterion("location_id <=", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdLike(String value) {
            addCriterion("location_id like", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdNotLike(String value) {
            addCriterion("location_id not like", value, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdIn(List<String> values) {
            addCriterion("location_id in", values, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdNotIn(List<String> values) {
            addCriterion("location_id not in", values, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdBetween(String value1, String value2) {
            addCriterion("location_id between", value1, value2, "locationId");
            return (Criteria) this;
        }

        public Criteria andLocationIdNotBetween(String value1, String value2) {
            addCriterion("location_id not between", value1, value2, "locationId");
            return (Criteria) this;
        }

        public Criteria andDayOfDataIsNull() {
            addCriterion("day_of_data is null");
            return (Criteria) this;
        }

        public Criteria andDayOfDataIsNotNull() {
            addCriterion("day_of_data is not null");
            return (Criteria) this;
        }

        public Criteria andDayOfDataEqualTo(Integer value) {
            addCriterion("day_of_data =", value, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataNotEqualTo(Integer value) {
            addCriterion("day_of_data <>", value, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataGreaterThan(Integer value) {
            addCriterion("day_of_data >", value, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataGreaterThanOrEqualTo(Integer value) {
            addCriterion("day_of_data >=", value, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataLessThan(Integer value) {
            addCriterion("day_of_data <", value, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataLessThanOrEqualTo(Integer value) {
            addCriterion("day_of_data <=", value, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataIn(List<Integer> values) {
            addCriterion("day_of_data in", values, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataNotIn(List<Integer> values) {
            addCriterion("day_of_data not in", values, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataBetween(Integer value1, Integer value2) {
            addCriterion("day_of_data between", value1, value2, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andDayOfDataNotBetween(Integer value1, Integer value2) {
            addCriterion("day_of_data not between", value1, value2, "dayOfData");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("location is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("location is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("location =", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("location <>", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("location >", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("location >=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("location <", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("location <=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("location like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("location not like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("location in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("location not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("location between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("location not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andFxDateIsNull() {
            addCriterion("fx_date is null");
            return (Criteria) this;
        }

        public Criteria andFxDateIsNotNull() {
            addCriterion("fx_date is not null");
            return (Criteria) this;
        }

        public Criteria andFxDateEqualTo(Date value) {
            addCriterionForJDBCDate("fx_date =", value, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("fx_date <>", value, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateGreaterThan(Date value) {
            addCriterionForJDBCDate("fx_date >", value, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fx_date >=", value, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateLessThan(Date value) {
            addCriterionForJDBCDate("fx_date <", value, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("fx_date <=", value, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateIn(List<Date> values) {
            addCriterionForJDBCDate("fx_date in", values, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("fx_date not in", values, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fx_date between", value1, value2, "fxDate");
            return (Criteria) this;
        }

        public Criteria andFxDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("fx_date not between", value1, value2, "fxDate");
            return (Criteria) this;
        }

        public Criteria andTempMaxIsNull() {
            addCriterion("temp_max is null");
            return (Criteria) this;
        }

        public Criteria andTempMaxIsNotNull() {
            addCriterion("temp_max is not null");
            return (Criteria) this;
        }

        public Criteria andTempMaxEqualTo(Double value) {
            addCriterion("temp_max =", value, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxNotEqualTo(Double value) {
            addCriterion("temp_max <>", value, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxGreaterThan(Double value) {
            addCriterion("temp_max >", value, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxGreaterThanOrEqualTo(Double value) {
            addCriterion("temp_max >=", value, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxLessThan(Double value) {
            addCriterion("temp_max <", value, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxLessThanOrEqualTo(Double value) {
            addCriterion("temp_max <=", value, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxIn(List<Double> values) {
            addCriterion("temp_max in", values, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxNotIn(List<Double> values) {
            addCriterion("temp_max not in", values, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxBetween(Double value1, Double value2) {
            addCriterion("temp_max between", value1, value2, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMaxNotBetween(Double value1, Double value2) {
            addCriterion("temp_max not between", value1, value2, "tempMax");
            return (Criteria) this;
        }

        public Criteria andTempMinIsNull() {
            addCriterion("temp_min is null");
            return (Criteria) this;
        }

        public Criteria andTempMinIsNotNull() {
            addCriterion("temp_min is not null");
            return (Criteria) this;
        }

        public Criteria andTempMinEqualTo(Double value) {
            addCriterion("temp_min =", value, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinNotEqualTo(Double value) {
            addCriterion("temp_min <>", value, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinGreaterThan(Double value) {
            addCriterion("temp_min >", value, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinGreaterThanOrEqualTo(Double value) {
            addCriterion("temp_min >=", value, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinLessThan(Double value) {
            addCriterion("temp_min <", value, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinLessThanOrEqualTo(Double value) {
            addCriterion("temp_min <=", value, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinIn(List<Double> values) {
            addCriterion("temp_min in", values, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinNotIn(List<Double> values) {
            addCriterion("temp_min not in", values, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinBetween(Double value1, Double value2) {
            addCriterion("temp_min between", value1, value2, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTempMinNotBetween(Double value1, Double value2) {
            addCriterion("temp_min not between", value1, value2, "tempMin");
            return (Criteria) this;
        }

        public Criteria andTextDayIsNull() {
            addCriterion("text_day is null");
            return (Criteria) this;
        }

        public Criteria andTextDayIsNotNull() {
            addCriterion("text_day is not null");
            return (Criteria) this;
        }

        public Criteria andTextDayEqualTo(String value) {
            addCriterion("text_day =", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayNotEqualTo(String value) {
            addCriterion("text_day <>", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayGreaterThan(String value) {
            addCriterion("text_day >", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayGreaterThanOrEqualTo(String value) {
            addCriterion("text_day >=", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayLessThan(String value) {
            addCriterion("text_day <", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayLessThanOrEqualTo(String value) {
            addCriterion("text_day <=", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayLike(String value) {
            addCriterion("text_day like", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayNotLike(String value) {
            addCriterion("text_day not like", value, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayIn(List<String> values) {
            addCriterion("text_day in", values, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayNotIn(List<String> values) {
            addCriterion("text_day not in", values, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayBetween(String value1, String value2) {
            addCriterion("text_day between", value1, value2, "textDay");
            return (Criteria) this;
        }

        public Criteria andTextDayNotBetween(String value1, String value2) {
            addCriterion("text_day not between", value1, value2, "textDay");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table weather
     *
     * @mbggenerated do_not_delete_during_merge Thu Jan 12 23:48:48 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table weather
     *
     * @mbggenerated Thu Jan 12 23:48:48 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}